
//version 1. same as two sum..

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int[] res = new int[2];
        if (numbers.length == 0)
            return res;
        
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i = 0 ; i < numbers.length; i++){
            map.put(numbers[i], i);
        }
        
        for(int i = 0; i < numbers.length; i++){
            int num = target - numbers[i];
            if(map.containsKey(num) && map.get(num) != i){
                res[0] = i+1;
                res[1] = map.get(num)+1;
                break;
            }
        }
        return res;
    }
}

//version 2.optimal

class Solution 
{
    public int[] twoSum(int[] A, int target) 
    {
        int start = 0;
		int end = A.length - 1;
        
        while(start < end)
        {
            if(A[start] + A[end] == target)
            {
                return new int[]{start + 1, end + 1};
            }
            else if(A[start] + A[end] < target)
            {
                start++;
            }
            else
            {
                end--;
            }    
        }
        return new int[2];
    }
}
